{{- if .Values.crds.install }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: breakglasses.access.cloudnimbus.io
spec:
  group: access.cloudnimbus.io
  names:
    kind: Breakglass
    listKind: BreakglassList
    plural: breakglasses
    singular: breakglass
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Breakglass is the Schema for the breakglasses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BreakglassSpec defines the desired state of a Breakglass
              access request.
            properties:
              approval:
                description: Approval requirements.
                properties:
                  required:
                    default: true
                    description: Required indicates whether manual approval is required.
                    type: boolean
                required:
                - required
                type: object
              clusterRoles:
                items:
                  type: string
                type: array
              justification:
                description: A clear, human-readable justification is required.
                minLength: 1
                type: string
              policy:
                description: |-
                  Either specify an ad-hoc policy or reuse existing ClusterRoles by name.
                  Exactly one must be set.
                items:
                  description: Policy defines RBAC rules with optional namespace scoping.
                  properties:
                    namespace:
                      description: Namespace scope for this policy. Empty means cluster-scoped.
                      type: string
                    rules:
                      description: RBAC policy rules.
                      items:
                        description: |-
                          PolicyRule holds information that describes a policy rule, but does not contain information
                          about who the rule applies to or which namespace the rule applies to.
                        properties:
                          apiGroups:
                            description: |-
                              APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of
                              the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          nonResourceURLs:
                            description: |-
                              NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path
                              Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.
                              Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          resourceNames:
                            description: ResourceNames is an optional white list of
                              names that the rule applies to.  An empty set means
                              that everything is allowed.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          resources:
                            description: Resources is a list of resources this rule
                              applies to. '*' represents all resources.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          verbs:
                            description: Verbs is a list of Verbs that apply to ALL
                              the ResourceKinds contained in this rule. '*' represents
                              all verbs.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - verbs
                        type: object
                      minItems: 1
                      type: array
                  required:
                  - rules
                  type: object
                type: array
              schedule:
                description: Schedule defines the breakglass activation window with
                  optional cron recurrence.
                properties:
                  cron:
                    description: |-
                      Optional cron schedule for recurring activations (min hour dom month ).
                      If omitted, the schedule is a one-time activation.
                    type: string
                  duration:
                    description: Duration after which access is revoked. If omitted
                    type: string
                  location:
                    description: Time zone location (IANA format, e.g., "America/New_York").
                      Defaults to UTC.
                    type: string
                  maxActivations:
                    description: |-
                      Maximum activations. Schedule stops after reaching this count.
                      Only applicable if Cron is set.
                    format: int32
                    type: integer
                  start:
                    description: Start time (RFC3339 format) when schedule becomes
                      active used for oneshots.
                    format: date-time
                    type: string
                type: object
              subjects:
                description: |-
                  Subjects defines the users/groups/service accounts to grant temporary access.
                  At least one subject is required.
                items:
                  description: |-
                    Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,
                    or a value for non-objects such as user and group names.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                minItems: 1
                type: array
              ticketID:
                description: Optional external ticket identifier.
                type: string
            required:
            - justification
            - schedule
            - subjects
            type: object
          status:
            description: BreakglassStatus defines the observed state of Breakglass
              (set by the operator).
            properties:
              activationCount:
                format: int32
                type: integer
              approvedBy:
                description: ApprovedBy is the username or identity that approved
                  the breakglass request.
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdResources:
                description: CreatedResources tracks the names of RBAC resources created
                  by this breakglass.
                items:
                  type: string
                type: array
              expiresAt:
                format: date-time
                type: string
              grantedAt:
                format: date-time
                type: string
              nextActivationAt:
                description: Optional tracking for recurring requests.
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  by the controller.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end }}
