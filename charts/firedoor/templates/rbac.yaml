{{- if .Values.rbac.create -}}
{{- if .Values.rbac.allowedNamespaces | len | eq 0 }}
# Cluster-wide RBAC management (default)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "firedoor.fullname" . }}-manager-role
  labels:
    {{- include "firedoor.labels" . | nindent 4 }}
  annotations:
    {{- include "firedoor.annotations" . | nindent 4 }}
rules:
{{- range .Values.rbac.coreRules }}
  - apiGroups: {{ toYaml .apiGroups | nindent 4 }}
    resources: {{ toYaml .resources | nindent 4 }}
    verbs: {{ toYaml .verbs | nindent 4 }}
{{- end }}

{{- if .Values.rbac.privilegeEscalation }}
  # Allow the operator to grant permissions it doesn't hold itself
  # This bypasses Kubernetes RBAC restrictions
  - apiGroups: [ "rbac.authorization.k8s.io" ]
    resources: [ "roles", "rolebindings", "clusterroles", "clusterrolebindings" ]
    verbs: [ "escalate" ]
{{- end }}

{{- range .Values.rbac.extraRules }}
  - apiGroups: {{ toYaml .apiGroups | nindent 4 }}
    resources: {{ toYaml .resources | nindent 4 }}
    verbs: {{ toYaml .verbs | nindent 4 }}
{{- end }}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "firedoor.fullname" . }}-manager-rolebinding
  labels:
    {{- include "firedoor.labels" . | nindent 4 }}
  annotations:
    {{- include "firedoor.annotations" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "firedoor.fullname" . }}-manager-role
subjects:
  - kind: ServiceAccount
    name: {{ include "firedoor.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- else }}
# Namespaced RBAC management only
{{- range .Values.rbac.allowedNamespaces }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $.Chart.Name }}-manager-role
  namespace: {{ . }}
rules:
{{- range $.Values.rbac.coreRules }}
  - apiGroups: {{ toYaml .apiGroups | nindent 4 }}
    resources: {{ toYaml .resources | nindent 4 }}
    verbs: {{ toYaml .verbs | nindent 4 }}
{{- end }}
{{- if $.Values.rbac.privilegeEscalation }}
  - apiGroups: [ "rbac.authorization.k8s.io" ]
    resources: [ "roles", "rolebindings", "clusterroles", "clusterrolebindings" ]
    verbs: [ "escalate" ]
{{- end }}
{{- range $.Values.rbac.extraRules }}
  - apiGroups: {{ toYaml .apiGroups | nindent 4 }}
    resources: {{ toYaml .resources | nindent 4 }}
    verbs: {{ toYaml .verbs | nindent 4 }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $.Chart.Name }}-manager-rolebinding
  namespace: {{ . }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $.Chart.Name }}-manager-role
subjects:
  - kind: ServiceAccount
    name: {{ include "firedoor.serviceAccountName" $ }}
    namespace: {{ $.Release.Namespace }}
{{- end }}
{{- end }}
{{- end }} 